{"version":3,"file":"events.js","sourceRoot":"","sources":["../../src/components/events.ts"],"names":[],"mappings":"AAYA,MAAM,OAAO,kBAAkB;IAM9B,YAA6B,MAAmB;QAAnB,WAAM,GAAN,MAAM,CAAa;IAAG,CAAC;IAEpD,YAAY,CACX,SAAY,EACZ,QAAkE;QAElE,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,SAAS,EAAE,QAAyB,CAAC,CAAC;IACpE,CAAC;IAED,eAAe,CACd,SAAY,EACZ,QAAkE;QAElE,IAAI,CAAC,MAAM,CAAC,mBAAmB,CAAC,SAAS,EAAE,QAAyB,CAAC,CAAC;IACvE,CAAC;IAED,QAAQ,CAIP,IAAe,EACf,MAEY;QAEZ,MAAM,KAAK,GAAG,IAAI,WAAW,CAAC,IAAI,EAAE;YACnC,MAAM;YACN,OAAO,EAAE,IAAI;YACb,QAAQ,EAAE,IAAI;SACd,CAAC,CAAC;QAEH,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;IAClC,CAAC;;AArCuB,2BAAQ,GAAG;IAClC,MAAM,EAAE,EAAiB;IACzB,YAAY,EAAE,EAAoB;CAClC,CAAC","sourcesContent":["import type { Location } from \"./types\";\r\n\r\nexport type SearchMethod = \"zipcode\" | \"area\" | \"location\";\r\n\r\nexport type SearchEvent = CustomEvent<\r\n\t| { method: \"zipcode\"; zipcode: string }\r\n\t| { method: \"area\"; area: string }\r\n\t| { method: \"location\"; location: Location | null }\r\n>;\r\n\r\nexport type InputAreaEvent = CustomEvent<{ value: string }>;\r\n\r\nexport class ScopedEventManager {\r\n\tprivate static readonly eventMap = {\r\n\t\tsearch: {} as SearchEvent,\r\n\t\t\"input-area\": {} as InputAreaEvent,\r\n\t};\r\n\r\n\tconstructor(private readonly target: EventTarget) {}\r\n\r\n\tadd_listener<K extends keyof typeof ScopedEventManager.eventMap>(\r\n\t\teventName: K,\r\n\t\tlistener: (event: (typeof ScopedEventManager.eventMap)[K]) => void\r\n\t) {\r\n\t\tthis.target.addEventListener(eventName, listener as EventListener);\r\n\t}\r\n\r\n\tremove_listener<K extends keyof typeof ScopedEventManager.eventMap>(\r\n\t\teventName: K,\r\n\t\tlistener: (event: (typeof ScopedEventManager.eventMap)[K]) => void\r\n\t): void {\r\n\t\tthis.target.removeEventListener(eventName, listener as EventListener);\r\n\t}\r\n\r\n\tdispatch<\r\n\t\tEventType extends keyof typeof ScopedEventManager.eventMap,\r\n\t\tMethod extends SearchMethod\r\n\t>(\r\n\t\ttype: EventType,\r\n\t\tdetail: ((typeof ScopedEventManager.eventMap)[EventType] & {\r\n\t\t\tmethod: Method;\r\n\t\t})[\"detail\"]\r\n\t): void {\r\n\t\tconst event = new CustomEvent(type, {\r\n\t\t\tdetail,\r\n\t\t\tbubbles: true,\r\n\t\t\tcomposed: true,\r\n\t\t});\r\n\r\n\t\tthis.target.dispatchEvent(event);\r\n\t}\r\n}\r\n"]}