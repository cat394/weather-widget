{"version":3,"file":"weather-widget.js","sourceRoot":"","sources":["../../src/components/weather-widget.ts"],"names":[],"mappings":"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","sourcesContent":["import './weather-icon';\r\nimport './weather-main';\r\nimport './weather-search';\r\nimport './weather-chart';\r\nimport {LitElement, css, html} from 'lit';\r\nimport {customElement, property, query, state} from 'lit/decorators.js';\r\nimport {classMap} from 'lit/directives/class-map.js';\r\nimport type {\r\n  AreaSuggestions,\r\n  Content,\r\n  TransformWeatherData,\r\n  WeatherData,\r\n} from './types';\r\nimport type {WeatherMain} from './weather-main';\r\nimport type {WeatherSearch} from './weather-search';\r\nimport type {WeatherChart} from './weather-chart';\r\nimport {base_style} from './common-styles';\r\nimport {DefaultDataTransformer} from '../utils';\r\nimport {DEFAULT_SETTINGS} from './const';\r\n\r\n@customElement('weather-widget')\r\nexport class WeatherWidget extends LitElement {\r\n  #data?: WeatherData;\r\n  transform: TransformWeatherData = (data) =>\r\n    new DefaultDataTransformer(data as WeatherData).transform();\r\n\r\n  @state() is_search_dialog_open = false;\r\n\r\n  @query('weather-main') weather_main!: WeatherMain;\r\n  @query('weather-search') weather_search!: WeatherSearch;\r\n  @query('weather-chart') weather_chart!: WeatherChart;\r\n\r\n  @property({type: Object})\r\n  get data(): undefined | WeatherData {\r\n    return this.#data;\r\n  }\r\n\r\n  set data(new_data: WeatherData) {\r\n    const old_value = this.#data;\r\n\r\n    this.#data = this.notransform ? new_data : this.transform(new_data);\r\n\r\n    this.requestUpdate('data', old_value);\r\n  }\r\n\r\n  @property({attribute: 'temp-unit'}) temp_unit: string =\r\n    DEFAULT_SETTINGS.TEMPRATURE_UNIT;\r\n  @property({attribute: 'search-methods'}) search_methods: string =\r\n    DEFAULT_SETTINGS.SEARCH_METHODS;\r\n  @property({type: Array, attribute: 'area-suggestions'})\r\n  area_suggestions: AreaSuggestions = [];\r\n  @property({type: Number, attribute: 'input-area-debounce'})\r\n  input_area_debounce: number = DEFAULT_SETTINGS.INPUT_AREA_DEBOUNCE;\r\n  @property({type: Boolean}) notransform = false;\r\n\r\n  override connectedCallback(): void {\r\n    super.connectedCallback();\r\n  }\r\n\r\n  protected override render(): unknown {\r\n    const not_search_exists = this.search_methods === '';\r\n\r\n    const dynamic_class_style = {\r\n      'not-search-exists': not_search_exists,\r\n    };\r\n\r\n    return html`\r\n      <div class=\"container\">\r\n        <div class=\"contents\">\r\n          <weather-main .data=${this.data}></weather-main>\r\n          <weather-chart\r\n            .data=${this.data}\r\n            .temp_unit=${this.temp_unit}\r\n          ></weather-chart>\r\n        </div>\r\n\r\n        <nav part=\"nav\">\r\n          <ul class=${classMap(dynamic_class_style)}>\r\n            ${!not_search_exists\r\n              ? html` <li>\r\n                  <button\r\n                    type=\"button\"\r\n                    @click=${() => (this.is_search_dialog_open = true)}\r\n                  >\r\n                    <span class=\"sr-only\">対象地域を検索する</span>\r\n                    <weather-icon\r\n                      name=\"search\"\r\n                      width=\"var(--_nav-icon-size)\"\r\n                      height=\"var(--_nav-icon-size)\"\r\n                    ></weather-icon>\r\n                  </button>\r\n                </li>`\r\n              : ''}\r\n            <li>\r\n              <button type=\"button\" @click=${() => this.move('main')}>\r\n                <span class=\"sr-only\">天気の概要を見る</span>\r\n                <weather-icon\r\n                  name=\"home\"\r\n                  width=\"var(--_nav-icon-size)\"\r\n                  height=\"var(--_nav-icon-size)\"\r\n                ></weather-icon>\r\n              </button>\r\n            </li>\r\n            <li>\r\n              <button type=\"button\" @click=${() => this.move('chart')}>\r\n                <span class=\"sr-only\">詳しい天気情報を見る</span>\r\n                <weather-icon\r\n                  name=\"chart\"\r\n                  width=\"var(--_nav-icon-size)\"\r\n                  height=\"var(--_nav-icon-size)\"\r\n                ></weather-icon>\r\n              </button>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n        <weather-search\r\n          exportparts=\"search, input\"\r\n          .area_suggestions=${this.area_suggestions}\r\n          .input_area_debounce=${this.input_area_debounce}\r\n          .open=${this.is_search_dialog_open}\r\n          .search_methods=${this.search_methods}\r\n        ></weather-search>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  close_search_dialog(): void {\r\n    this.is_search_dialog_open = false;\r\n  }\r\n\r\n  move(content: Content): void {\r\n    switch (content) {\r\n      case 'main':\r\n        this.weather_main.scrollIntoView({\r\n          behavior: 'smooth',\r\n          block: 'start',\r\n        });\r\n        break;\r\n      case 'chart':\r\n        this.weather_chart.scrollIntoView({\r\n          behavior: 'smooth',\r\n        });\r\n    }\r\n  }\r\n\r\n  static override styles = [\r\n    base_style,\r\n    css`\r\n      :host {\r\n        --_weather-widget-theme-hue: var(--weather-widget-theme-hue, 242.73);\r\n        --_weather-widget-theme: var(\r\n          --weather-widget-theme,\r\n          oklch(0.66 0.2 var(--_weather-widget-theme-hue))\r\n        );\r\n        --_weather-widget-theme-contrast: var(\r\n          --weather-widget-theme-contrast,\r\n          white\r\n        );\r\n        --_weather-widget-bg-primary: var(--weather-widget-bg-primary, white);\r\n        --_weather-widget-text-primary: var(\r\n          --_weather-widget-text-primary,\r\n          black\r\n        );\r\n        --_weather-widget-table-header-bg: oklch(\r\n          from var(--_weather-widget-theme) calc(l - 0.1) c h\r\n        );\r\n        --_weather-widget-table-header-text: var(\r\n          --weather-widget-table-header-text,\r\n          white\r\n        );\r\n        --_weather-widget-table-odd-bg: oklch(\r\n          from var(--_weather-widget-theme) calc(l + 0.1) c h / 0.1\r\n        );\r\n        --_weather-widget-table-odd-text: var(\r\n          --_weather-widget-text-primary black\r\n        );\r\n        --_weather-widget-table-even-bg: oklch(\r\n          from var(--_weather-widget-theme) 1 0 h\r\n        );\r\n        --_weather-widget-table-even-text: var(--_weather-widget-text-primary);\r\n        --_weather-widget-chart-label: var(\r\n          --weather-widget-chart-label,\r\n          oklch(from black 0.7 c h)\r\n        );\r\n        --_weather-widget-chart-grid: var(\r\n          --weather-widget-chart-grid,\r\n          oklch(from black 0.8 c h / 0.3)\r\n        );\r\n        --_weather-widget-search-dialog-bg: var(\r\n          --weather-widget-search-dialog-bg,\r\n          color(from black srgb r g b / 0.83)\r\n        );\r\n        --_weather-widget-search-dialog-text: var(\r\n          --weather-widget-search-dialog-text,\r\n          white\r\n        );\r\n        --_main-icon-size: 250px;\r\n        --_main-location-name-font-size: 1.7rem;\r\n        --_base-font-size: 1rem;\r\n        --_nav-icon-size: 30px;\r\n\r\n        font-family: Calibri, Candara, Segoe, 'Segoe UI', Optima, Arial,\r\n          sans-serif, system-ui;\r\n        font-size: var(--_base-font-size);\r\n        display: inline-block;\r\n        width: 100%;\r\n        max-width: 400px;\r\n        box-shadow: 0 0px 10px -1px var(--_weather-widget-theme);\r\n        border-radius: 10px;\r\n        visibility: hidden;\r\n        container: widget / inline-size;\r\n      }\r\n\r\n      :host(:defined) {\r\n        visibility: visible;\r\n      }\r\n\r\n      p:has(time) {\r\n        float: right;\r\n      }\r\n\r\n      .container {\r\n        --_huge: 1e5px;\r\n        color: var(--_weather-widget-text);\r\n        background: var(--_weather-widget-bg-primary);\r\n        padding: 2rem;\r\n        padding-bottom: 1.2rem;\r\n        position: relative;\r\n      }\r\n\r\n      nav {\r\n        width: 100%;\r\n        position: absolute;\r\n        right: 0;\r\n        left: 0;\r\n        bottom: 20px;\r\n        display: flex;\r\n        justify-content: center;\r\n\r\n        ul {\r\n          max-width: 300px;\r\n          width: 90%;\r\n          display: flex;\r\n          justify-content: space-between;\r\n          background: oklch(from var(--_weather-widget-theme) l c h / 0.9);\r\n          border-radius: var(--_huge);\r\n\r\n          > li {\r\n            flex-basis: 78px;\r\n\r\n            button {\r\n              display: flex;\r\n              padding-block: 0.3rem;\r\n              padding-inline: 1.5rem;\r\n            }\r\n          }\r\n        }\r\n\r\n        ul.not-search-exists {\r\n          max-width: 200px;\r\n        }\r\n      }\r\n\r\n      @container widget (width < 314px) {\r\n        :host {\r\n          --_main-icon-size: 200px;\r\n        }\r\n\r\n        .container {\r\n          padding: 1rem;\r\n        }\r\n\r\n        nav ul {\r\n          border-radius: 10px;\r\n\r\n          > * {\r\n            display: flex;\r\n            justify-content: center;\r\n          }\r\n\r\n          button {\r\n            padding-inline: 0.5rem;\r\n          }\r\n        }\r\n      }\r\n\r\n      .contents {\r\n        max-height: 600px;\r\n        overflow-x: scroll;\r\n        overflow-y: auto;\r\n        scrollbar-width: thin;\r\n        display: grid;\r\n        grid-template-columns: 100% 100%;\r\n        gap: 3.5rem;\r\n        scroll-snap-type: x mandatory;\r\n        scroll-behavior: smooth;\r\n\r\n        > * {\r\n          scroll-snap-align: start;\r\n        }\r\n      }\r\n    `,\r\n  ];\r\n}\r\n\r\ndeclare global {\r\n  interface HTMLElementTagNameMap {\r\n    'weather-widget': WeatherWidget;\r\n  }\r\n}\r\n"]}