{"version":3,"file":"weather-chart.js","sourceRoot":"","sources":["../../src/components/weather-chart.ts"],"names":[],"mappings":"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","sourcesContent":["import \"./weather-table\";\r\nimport { LitElement, PropertyValues, css, html } from \"lit\";\r\nimport { customElement, property, query } from \"lit/decorators.js\";\r\nimport Chart from \"chart.js/auto\";\r\nimport { WeatherData } from \"./types\";\r\nimport { base_style } from \"./common-styles\";\r\nimport { DEFAULT_SETTINGS } from \"./const\";\r\n\r\n@customElement(\"weather-chart\")\r\nexport class WeatherChart extends LitElement {\r\n\t#chart?: Chart;\r\n\r\n\t@property({ type: Object })\r\n\tdata?: WeatherData;\r\n\r\n\t@property()\r\n\ttemp_unit: string = DEFAULT_SETTINGS.TEMPRATURE_UNIT;\r\n\r\n\t@query(\"canvas\") canvas!: HTMLCanvasElement;\r\n\r\n\tprotected override firstUpdated(): void {\r\n\t\tthis.init_chart();\r\n\t}\r\n\r\n\tprotected override updated(_changedProperties: PropertyValues<this>): void {\r\n\t\tif (_changedProperties.has(\"data\")) {\r\n\t\t\tif (!this.data || !this.#chart) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis.#chart.data.labels = this.data.hours.map((hour) => hour.time);\r\n\r\n\t\t\tthis.#chart.data.datasets[0].data = this.data.hours.map(\r\n\t\t\t\t(weather) => weather.temp\r\n\t\t\t);\r\n\r\n\t\t\tthis.#chart.update();\r\n\t\t}\r\n\t}\r\n\r\n\t#get_chart_colors() {\r\n\t\tconst style = getComputedStyle(this);\r\n\r\n\t\tconst border_color = style\r\n\t\t\t.getPropertyValue(\"--_weather-widget-theme\")\r\n\t\t\t.trim();\r\n\r\n\t\tconst label_color = style\r\n\t\t\t.getPropertyValue(\"--_weather-widget-chart-label\")\r\n\t\t\t.trim();\r\n\r\n\t\tconst grid_color = style\r\n\t\t\t.getPropertyValue(\"--_weather-widget-chart-grid\")\r\n\t\t\t.trim();\r\n\r\n\t\treturn { border_color, label_color, grid_color };\r\n\t}\r\n\r\n\tinit_chart(): void {\r\n\t\tconst { border_color, label_color, grid_color } = this.#get_chart_colors();\r\n\r\n\t\tthis.#chart = new Chart(this.canvas, {\r\n\t\t\ttype: \"line\",\r\n\t\t\tdata: {\r\n\t\t\t\tlabels: [],\r\n\t\t\t\tdatasets: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlabel: \"\",\r\n\t\t\t\t\t\tdata: [],\r\n\t\t\t\t\t\tborderColor: border_color,\r\n\t\t\t\t\t\ttension: 0.4,\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t\toptions: {\r\n\t\t\t\tresponsive: false,\r\n\t\t\t\tmaintainAspectRatio: true,\r\n\t\t\t\tplugins: {\r\n\t\t\t\t\tlegend: {\r\n\t\t\t\t\t\tdisplay: false,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t\tscales: {\r\n\t\t\t\t\tx: {\r\n\t\t\t\t\t\tticks: {\r\n\t\t\t\t\t\t\tcolor: label_color,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tgrid: {\r\n\t\t\t\t\t\t\tcolor: grid_color,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t},\r\n\t\t\t\t\ty: {\r\n\t\t\t\t\t\tticks: {\r\n\t\t\t\t\t\t\tcolor: label_color,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tgrid: {\r\n\t\t\t\t\t\t\tcolor: grid_color,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t});\r\n\t}\r\n\r\n\tprotected override render(): unknown {\r\n\t\treturn html`\r\n\t\t\t<section>\r\n\t\t\t\t<h2>１日の気温の推移</h2>\r\n\t\t\t\t<div class=\"container\">\r\n\t\t\t\t\t<canvas></canvas>\r\n\t\t\t\t</div>\r\n\t\t\t</section>\r\n\t\t\t<section>\r\n\t\t\t\t<h2>１時間ごとの予報</h2>\r\n\t\t\t\t<weather-table\r\n\t\t\t\t\t.data=${this.data}\r\n\t\t\t\t\t.temp_unit=${this.temp_unit}\r\n\t\t\t\t></weather-table>\r\n\t\t\t</section>\r\n\t\t`;\r\n\t}\r\n\r\n\tstatic override styles = [\r\n\t\tbase_style,\r\n\t\tcss`\r\n\t\t\t:host {\r\n\t\t\t\tdisplay: block;\r\n\t\t\t\twidth: 100%;\r\n\t\t\t\tmax-height: 500px;\r\n\t\t\t\toverflow-y: auto;\r\n\t\t\t}\r\n\r\n\t\t\th2 {\r\n\t\t\t\tfont-size: calc(var(--_base-font-size) * 1.2);\r\n\t\t\t\tmargin-block-end: 1rem;\r\n\t\t\t}\r\n\r\n\t\t\tsection:has(canvas) {\r\n\t\t\t\twidth: 100%;\r\n\t\t\t\taspect-ratio: 16 / 9;\r\n\t\t\t\tmargin-block-end: 3rem;\r\n\t\t\t}\r\n\r\n\t\t\t.container:has(canvas) {\r\n\t\t\t\twidth: 100%;\r\n\t\t\t\theight: auto;\r\n\t\t\t\toverflow-x: auto;\r\n\t\t\t}\r\n\r\n\t\t\tcanvas {\r\n\t\t\t\tmin-width: 330px;\r\n\t\t\t\theight: auto;\r\n\t\t\t\taspect-ratio: 16 / 9;\r\n\t\t\t}\r\n\t\t`,\r\n\t];\r\n}\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t\"weather-chart\": WeatherChart;\r\n\t}\r\n}\r\n"]}